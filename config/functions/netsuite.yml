---
function:
  handler: ${self:custom.alias}/src/netsuite.handler
  name: ${self:service}-netsuite-ar-${self:provider.stage}
  description: Netsuite AR api service - ${self:provider.stage}
  runtime: nodejs14.x
  memorySize: 2048
  timeout: 900
  # events:
  #   - http:
  #       path: /netsuite
  #       method: POST
  #       integration: lambda
  #       private: true
  #       cors: true
  #       response:
  #         headers: ${self:custom.standardResponseHeaders}
  #         statusCodes:
  #           200:
  #             pattern: ""
  #           400:
  #             pattern: '[\s\S]*\[400\][\s\S]*'
  #             headers:
  #               Content-Type: "'application/json'"
  #             template: ${file(responseTemplate.vtl)}
  #           500:
  #             pattern: '[\s\S]*\[500\][\s\S]*'
  #             headers:
  #               Content-Type: "'application/json'"
  #             template: ${file(responseTemplate.vtl)}
  #       authorizer:
  #         name: custom-authorizer
  #         resultTtlInSeconds: 0
  #         identitySource: method.request.header.x-api-key
  #         type: request
  package:
    include:
      - ${self:custom.alias}/src/netsuite.js
      - Helpers/**
      - node_modules/**
  environment:
    REGION: ${self:provider.region}
    DBNAME: ${ssm:/omni-dw/${self:provider.stage}/db/name}
    USER: ${ssm:/omni-dw/${self:provider.stage}/db/user~true}
    HOST: ${ssm:/omni-dw/${self:provider.stage}/db/host~true}
    PASS: ${ssm:/omni-dw/${self:provider.stage}/db/password~true}
    PORT: ${ssm:/omni-dw/${self:provider.stage}/db/port}

  events:
    - schedule: rate(30 minutes)
