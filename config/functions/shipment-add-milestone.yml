function:
  handler: ${self:custom.alias}/src/add_milestone.handler
  name: ${self:service}-add-milestone-${self:provider.stage}
  description: add milestone api service - ${self:provider.stage}
  runtime: nodejs18.x
  timeout: 60
  layers:
    - !Ref DWAPILayerLambdaLayer
  memorySize: 512
  environment:
    ADD_MILESTONE_URL: ${ssm:/omni-ivia/${self:provider.stage}/addMilestone/url}
    ADD_MILESTONE_LOC_URL: ${ssm:/omni-ivia/${self:provider.stage}/addMilestone/loc.url}
    TOKEN_VALIDATION_TABLE: ${ssm:/omni-dw/${self:provider.stage}/tokenValidator/table}
    CUSTOMER_ENTITLEMENT_TABLE: ${ssm:/omni-dw/${self:provider.stage}/customerEntitlement/table} 
    CUSTOMER_ENTITLEMENT_HOUSEBILL_INDEX: ${ssm:/omni-dw/${self:provider.stage}/entitlement/houseBillNumber/index}
    TOKEN_VALIDATION_TABLE_INDEX: ${ssm:/omni-dw/${self:provider.stage}/tokenValidator/apiKey/index}
    ALLOWED_CUSTOMER_IDS: ${ssm:/omni-dw/allowedCustomerIds}
    SHIPMENT_HEADER_TABLE: ${ssm:/omni-wt-rt-updates/${self:provider.stage}/shipment-header/ddb.tableName~true}
    SHIPMENT_MILESTONE_TABLE : ${ssm:/omni-wt-rt-updates/${self:provider.stage}/shipment-milestone/ddb.tableName~true}
    MILESTONE_ORDER_STATUS: ${ssm:/omni-wt-rt-updates/${self:provider.stage}/add-milestone/status-code}
    CONVENANT_TRACKING_URL: ${ssm:/omni-dw-api-sevices/${self:provider.stage}/covenant-tracking/api.url}
    CONVENANT_TRACKING_API_KEY: ${ssm:/omni-dw-api-sevices/${self:provider.stage}/covenant-tracking/x-api-key}
    ADD_MILESTONE_LOGS_TABLE: ${ssm:/omni-dw/${self:provider.stage}/add-milestone-logs/ddb.tableName}
    P44_LOCATION_UPDATES_TABLE: ${ssm:/omni-p44/location-updates/${self:provider.stage}/source/ddb.table_name}
    ERROR_SNS_ARN: ${ssm:/omni-reports/${self:provider.stage}/error-notification/sns/arn}

  package:
    include:
      - ${self:custom.alias}/src/add_milestone.js
  events:
    - http:
        path: /shipment/addmilestone
        method: POST
        integration: lambda
        private: true
        cors: true
        response:
          headers: ${self:custom.standardResponseHeaders}
          statusCodes:
            200:
              pattern: ""
            400:
              pattern: '[\s\S]*\[400\][\s\S]*'
              headers:
                Content-Type: "'application/json'"
              template: ${file(responseTemplate.vtl)}
            500:
              pattern: '[\s\S]*\[500\][\s\S]*'
              headers:
                Content-Type: "'application/json'"
              template: ${file(responseTemplate.vtl)}
        authorizer:
          name: custom-authorizer
          resultTtlInSeconds: 0
          identitySource: method.request.header.x-api-key
          type: request
