---
function:
  handler: v1/src/uploadpoddocument.handler
  name: ${self:service}-upload-pod-document-${self:provider.stage}
  description: upload pod document api service - ${self:provider.stage}
  warmup:
    default:
      enabled: true
      alias: ${self:custom.alias}
  runtime: nodejs14.x
  timeout: 500
  memorySize: 2048
  layers:
    - !Ref DWAPILayerLambdaLayer  
  events:
    - http:
        path: /uploadpoddocument
        method: POST
        integration: lambda
        private: true
        cors: true
        response:
          headers: ${self:custom.standardResponseHeaders}
          statusCodes:
            200:
              pattern: ""
            400:
              pattern: '[\s\S]*\[400\][\s\S]*'
              headers:
                Content-Type: "'application/json'"
              template: ${file(responseTemplate.vtl)}
            500:
              pattern: '[\s\S]*\[500\][\s\S]*'
              headers:
                Content-Type: "'application/json'"
              template: ${file(responseTemplate.vtl)}
        # authorizer:
        #   name: custom-authorizer
        #   resultTtlInSeconds: 0
        #   identitySource: method.request.header.x-api-key
        #   type: request
  package:
    include:
      - v1/src/uploadpoddocument.js
  environment:
    REGION: ${self:provider.region}
    ULOAD_POD_DOCUMENT_API: ${ssm:/omni-dw/${self:provider.stage}/api/uploadpoddocument}
